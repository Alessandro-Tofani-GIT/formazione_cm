---

- name: Crea registry Docker
  community.docker.docker_container:
    name: "{{registry_host}}"
    image: registry:latest
    state: started
    restart_policy: unless-stopped
    published_ports:
      - "{{registry_port}}:{{registry_port}}"
    volumes:
      - registry_data:/var/lib/registry
  when: container_runtime == 'docker'

- name: Crea registry Podman
  containers.podman.podman_container:
    name: "{{registry_host}}"
    image: registry:latest
    state: started
    restart_policy: unless-stopped
    published_ports:
      - "{{registry_port}}:{{registry_port}}"
    volumes:
      - registry_data:/var/lib/registry
  when: container_runtime == 'podman'

- name: Crea primo container (Docker)
  community.docker.docker_container:
    name: "{{ first_container_name }}"
    image: "{{ first_container_image }}"
    state: started
    published_ports:
      - "{{ first_container_port }}:22"
  when: container_runtime == 'docker'

- name: Crea primo container (Podman)
  containers.podman.podman_container:
    name: "{{ first_container_name }}"
    image: "{{ first_container_image }}"
    state: started
    published_ports:
      - "{{ first_container_port }}:22"
  when: container_runtime == 'podman'

- name: Crea secondo container (Docker)
  community.docker.docker_container:
    name: "{{ second_container_name }}"
    image: "{{ second_container_image }}"
    state: started
    published_ports:
      - "{{ second_container_port }}:22"
  when: container_runtime == 'docker'

- name: Crea secondo container (Podman)
  containers.podman.podman_container:
    name: "{{ second_container_name }}"
    image: "{{ second_container_image }}"
    state: started
    published_ports:
      - "{{ second_container_port }}:22"
  when: container_runtime == 'podman'